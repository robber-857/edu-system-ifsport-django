services:
  web:
    build:
      context: /srv/edu/app
    container_name: app-web
    env_file: /srv/edu/app/.env
    command: ["/entrypoint.sh"]
    expose: ["8000"]
    volumes:
      - /srv/edu/app:/app:rw
      - /srv/edu/app/public:/public:rw
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    networks: [appnet]

  caddy:
    image: caddy:2
    container_name: app-caddy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /srv/edu/app/Caddyfile:/etc/caddy/Caddyfile
      - /srv/edu/app/public:/srv
      - caddy_data:/data
      - caddy_config:/config
    depends_on:
      web:
        condition: service_started
    restart: unless-stopped
    networks: [appnet]

  db:
    #  必须用 8.4，旧卷是 8.4 轨道 
    image: mysql:8.4
    container_name: app-db
    environment:
      # 旧卷已存在时，这些 env 不会重建库，但保留无妨
      MYSQL_DATABASE: edudb
      MYSQL_ROOT_PASSWORD: changeme
    # 不要再写 default-authentication-plugin（8.4 会报 unknown variable） 
    command: >
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_unicode_ci
    volumes:
      #  挂已有旧卷（名字是 app_db-data，有中划线） 
      - db_data:/var/lib/mysql
    healthcheck:
      #  不带密码做 ping，避免因旧卷里 root 密码不同而健康检查失败 
      test: ["CMD-SHELL", "mysqladmin ping -h 127.0.0.1 --silent || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 30
      start_period: 10s
    restart: unless-stopped
    networks: [appnet]

volumes:
  caddy_data:
  caddy_config:
  # 告诉 compose 这个卷是“外部现有卷”，指向 app_db-data（中划线） 
  db_data:
    external: true
    name: app_db-data

networks:
  appnet:
    driver: bridge

