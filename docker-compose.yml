services:
  web:
    build: .
    container_name: app-web
    env_file: .env
    command: ["/entrypoint.sh"]
    expose: ["8000"]
    volumes:
      - ./:/app
      - ./public:/public
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    networks: [appnet]

  caddy:
    image: caddy:2
    container_name: app-caddy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - ./public:/srv
      - caddy_data:/data
      - caddy_config:/config
    depends_on:
      web:
        condition: service_started
    restart: unless-stopped
    networks: [appnet]

  db:
    image: mysql:8.0
    container_name: app-db
    environment:
      MYSQL_DATABASE: ${DB_NAME:-edu}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-changeme}
    command: >
      --default-authentication-plugin=mysql_native_password
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_unicode_ci
    volumes:
      - db_data:/var/lib/mysql
    # 用容器里的 $MYSQL_ROOT_PASSWORD 做健康检查（CMD-SHELL 可取到环境变量）
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h 127.0.0.1 -p$$MYSQL_ROOT_PASSWORD || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 30
      start_period: 10s
    restart: unless-stopped
    networks: [appnet]

volumes:
  caddy_data:
  caddy_config:
  db_data:

networks:
  appnet:
    driver: bridge
